# Generated by Django 3.0.5 on 2020-05-14 18:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('first_name_en', models.CharField(max_length=255, null=True)),
                ('first_name_uk', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('last_name_en', models.CharField(max_length=255, null=True)),
                ('last_name_uk', models.CharField(max_length=255, null=True)),
                ('career', models.CharField(help_text='Illustrator and Web designer', max_length=255)),
                ('career_en', models.CharField(help_text='Illustrator and Web designer', max_length=255, null=True)),
                ('career_uk', models.CharField(help_text='Illustrator and Web designer', max_length=255, null=True)),
                ('overview', models.TextField()),
                ('overview_en', models.TextField(null=True)),
                ('overview_uk', models.TextField(null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/%Y/%m/%d/')),
                ('years_experience', models.IntegerField(default=False)),
                ('partners', models.IntegerField(default=False)),
                ('completed_projects', models.IntegerField(default=False)),
                ('clients', models.IntegerField(default=False, help_text='e.g., amount of clients')),
                ('locality', models.CharField(help_text='e.g., city such as Kyiv', max_length=255)),
                ('locality_en', models.CharField(help_text='e.g., city such as Kyiv', max_length=255, null=True)),
                ('locality_uk', models.CharField(help_text='e.g., city such as Kyiv', max_length=255, null=True)),
                ('country', models.CharField(help_text='e.g., Ukraine', max_length=64)),
                ('country_en', models.CharField(help_text='e.g., Ukraine', max_length=64, null=True)),
                ('country_uk', models.CharField(help_text='e.g., Ukraine', max_length=64, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField(default=False)),
                ('facebook', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('instagram', models.URLField(blank=True)),
                ('skype', models.CharField(blank=True, help_text='skype: user_name', max_length=255)),
                ('linkedin', models.URLField(blank=True)),
                ('pinterest', models.URLField(blank=True)),
                ('resume_file', models.FileField(blank=True, upload_to='resume/%Y/%m/%d/')),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('meta_keywords_en', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('meta_keywords_uk', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('meta_description', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True, verbose_name='Meta Description')),
                ('meta_description_en', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True, verbose_name='Meta Description')),
                ('meta_description_uk', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True, verbose_name='Meta Description')),
            ],
            options={
                'verbose_name_plural': 'Personal Info',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Basic', 'Basic'), ('Pro', 'Pro')], default='Basic', max_length=10)),
                ('instrument', models.CharField(default='Adobe Illustrator', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Logo, newsletter, business cards...')),
                ('description_en', models.TextField(blank=True, help_text='Logo, newsletter, business cards...', null=True)),
                ('description_uk', models.TextField(blank=True, help_text='Logo, newsletter, business cards...', null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., C++, Python, Java, JavaScript', max_length=250)),
                ('name_en', models.CharField(help_text='e.g., C++, Python, Java, JavaScript', max_length=250, null=True)),
                ('name_uk', models.CharField(help_text='e.g., C++, Python, Java, JavaScript', max_length=250, null=True)),
                ('slug', models.SlugField(blank=True, max_length=250)),
                ('level', models.IntegerField(default=False, help_text='e.g., Indicate your level skills in percentage')),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True)),
                ('meta_keywords_en', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True)),
                ('meta_keywords_uk', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True)),
                ('meta_description_en', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True)),
                ('meta_description_uk', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_client', models.CharField(default='Jane', max_length=255)),
                ('first_name_client_en', models.CharField(default='Jane', max_length=255, null=True)),
                ('first_name_client_uk', models.CharField(default='Jane', max_length=255, null=True)),
                ('last_name_client', models.CharField(default='Doe', max_length=255)),
                ('last_name_client_en', models.CharField(default='Doe', max_length=255, null=True)),
                ('last_name_client_uk', models.CharField(default='Doe', max_length=255, null=True)),
                ('photo_clients', models.ImageField(blank=True, upload_to='clients/%Y/%m/%d/')),
                ('position_client', models.CharField(blank=True, help_text='e.g., CEO at Mighty Schools', max_length=255)),
                ('position_client_en', models.CharField(blank=True, help_text='e.g., CEO at Mighty Schools', max_length=255, null=True)),
                ('position_client_uk', models.CharField(blank=True, help_text='e.g., CEO at Mighty Schools', max_length=255, null=True)),
                ('body', models.TextField(blank=True, help_text='e.g., Natalia Dozor is just awesome. I am so happy to have met her!')),
                ('body_en', models.TextField(blank=True, help_text='e.g., Natalia Dozor is just awesome. I am so happy to have met her!', null=True)),
                ('body_uk', models.TextField(blank=True, help_text='e.g., Natalia Dozor is just awesome. I am so happy to have met her!', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_uk', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('image', models.ImageField(blank=True, upload_to=projects.models.image_folder)),
                ('description', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_uk', models.TextField(blank=True, null=True)),
                ('technology', models.CharField(max_length=20)),
                ('technology_en', models.CharField(max_length=20, null=True)),
                ('technology_uk', models.CharField(max_length=20, null=True)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True)),
                ('meta_keywords_en', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True)),
                ('meta_keywords_uk', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True)),
                ('meta_description_en', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True)),
                ('meta_description_uk', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('total_likes', models.PositiveIntegerField(db_index=True, default=0)),
                ('users_like', models.ManyToManyField(blank=True, related_name='project_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ('-added',),
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to=projects.models.another_image_folder)),
                ('caption', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=70, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='projects.Project')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='name')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('body', models.TextField(verbose_name='body')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='projects.Project')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
    ]
